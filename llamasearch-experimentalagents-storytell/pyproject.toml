[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "llamasearch-experimentalagents-storytell"
version = "0.1.0"
description = "LlamaSearch ExperimentalAgents: Data Storytelling framework with MLX integration"
authors = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.11"
license = {text = "MIT"}
dependencies = [
    "mlx>=0.3.0",
    "openai>=1.3.0",
    "pydantic>=2.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",
    "pandas>=1.5.0",
    "numpy>=1.22.0",
    "kaleido>=0.2.1",
    "python-dotenv>=1.0.0",
    "llm>=0.12.0",
    "sqlite-utils>=3.35",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.10.0",
    "pyright>=1.1.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.7.0",
]
gui = [
    "tauri-app>=0.1.0",
]
rag = [
    "llama-index>=0.9.0",
    "haystack-ai>=2.0.0-rc",
]

[project.urls]
Homepage = "https://github.com/llamasearch/experimentalagents-storytell"
Documentation = "https://llamasearch.github.io/experimentalagents-storytell"
Issues = "https://github.com/llamasearch/experimentalagents-storytell/issues"

[project.scripts]
storytell = "llamasearch_experimentalagents_storytell.cli:main"

[tool.maturin]
module-name = "llamasearch_experimentalagents_storytell.rust"
python-source = "src"
features = ["pyo3/extension-module"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "W", "B", "C4", "ARG", "RUF"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/node_modules", "**/__pycache__", "build", "dist"]
typeCheckingMode = "basic"
pythonVersion = "3.11"
reportPrivateImportUsage = false
reportMissingImports = "warning"
reportMissingTypeStubs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
] 